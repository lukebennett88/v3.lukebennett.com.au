name: 👀 Check

on:
  push:
    branches:
      - main
  pull_request: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: write
  contents: read

jobs:
  prettier:
    name: ✨ Prettier
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: 🦷 Extract pnpm version from package.json
        id: extract_version
        run:
          echo "PNPM_VERSION=$(jq -r '.packageManager' package.json | cut -d'@'
          -f2)" >> $GITHUB_ENV

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 🌐 Setup node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: pnpm

      - name: 📥 Download deps
        run: pnpm install --frozen-lockfile

      - name: 💅 Format
        run: pnpm run check:format

  eslint:
    name: ⬣ ESLint
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: 🦷 Extract pnpm version from package.json
        id: extract_version
        run:
          echo "PNPM_VERSION=$(jq -r '.packageManager' package.json | cut -d'@'
          -f2)" >> $GITHUB_ENV

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 🌐 Setup node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: pnpm

      - name: 📥 Download deps
        run: pnpm install --frozen-lockfile

      - name: 🔬 Lint
        run: pnpm run check:lint

  typecheck:
    name: ʦ TypeScript
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: 🦷 Extract pnpm version from package.json
        id: extract_version
        run:
          echo "PNPM_VERSION=$(jq -r '.packageManager' package.json | cut -d'@'
          -f2)" >> $GITHUB_ENV

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 🌐 Setup node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: pnpm

      - name: 📥 Download deps
        run: pnpm install --frozen-lockfile

      - name: 🔎 Type check
        run: pnpm run check:types
